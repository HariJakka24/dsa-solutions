class Solution:
    
    def permute(self, nums: List[int]) -> List[List[int]]:
        result = []
        n = len(nums)
        if n == 1:
            return [nums.copy()]
        for i in range(n):
            a = nums[i]
            perms = self.permute(nums[0:i]+nums[i+1:n])
            for perm in perms:
                perm.append(a)
                result.append(perm)
        return result
    
# Alternate solution

class Solution:
    def permute(self, nums: List[int]) -> List[List[int]]:
        result = []
        def backtrack(start):
            if start == len(nums):
                result.append(nums.copy())
            for i in range(start, len(nums)):
                nums[start], nums[i] = nums[i], nums[start]
                backtrack(start+1)
                nums[i], nums[start] = nums[start], nums[i]
        backtrack(0)
        return result
